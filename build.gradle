buildscript {
    dependencies {
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11',
            'org.asciidoctor:asciidoctorj-diagram:1.3.1'
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.asciidoctor.convert' version '1.5.3'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

compileJava.options.encoding = 'UTF-8'

repositories {
    jcenter()
}

configurations {
    jaxrsAnalyzer
}

dependencies {
    compile "io.dropwizard:dropwizard-core:$dropwizardVersion",
        "io.dropwizard:dropwizard-migrations:$dropwizardVersion",
        "io.dropwizard:dropwizard-jdbi:$dropwizardVersion",
        'com.h2database:h2:1.4.191'

    testCompile "io.dropwizard:dropwizard-testing:$dropwizardVersion"

    jaxrsAnalyzer "com.sebastian-daschner:jaxrs-analyzer:0.9"
}

test {
    testLogging.showStandardStreams = true
}

mainClassName = 'ServerMainApplication'

asciidoctor {
    backends 'pdf'
    logDocuments = true
    requires = ['asciidoctor-diagram']
    attributes 'buildDir': buildDir
}

distributions {
    main {
        contents {
            from(asciidoctor) {
                include "*.pdf"
                into ""
            }
        }
    }
    src {
        contents {
            from('src')
            from(asciidoctor) {
                include "*.pdf"
                into ""
            }
            from('.') {
                include "*.properties"
                include "build.gradle"
                include "settings.gradle"
                include "gradle*/**"
            }
        }
    }
}

distZip.archiveName = "${rootProject.name}.zip"

srcDistZip.archiveName = "${rootProject.name}-src.zip"

task genDoc(type: JavaExec) {
    classpath project.configurations.jaxrsAnalyzer
    main "com.sebastian_daschner.jaxrs_analyzer.Main"
    systemProperties = System.properties
    args "-b", "plaintext"
    args "-o", "$buildDir/jaxrsAnalyzer/index.adoc"
    args "${buildDir}/classes/main"
}

genDoc.doFirst {
    file("$buildDir/jaxrsAnalyzer/").mkdirs()
}
